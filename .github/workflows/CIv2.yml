name: JQM CI v2.x

on:
    push:
        branches:
            - 2.2-maintenance
    pull_request:
        branches:
          - 2.2-maintenance

defaults:
    run:
        working-directory: ./jqm-all

jobs:
    jdk_tests:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                java: [6, 7, 8, 9, 10, 11, 12, 17]
        steps:
            - uses: actions/checkout@v2
            - name: Set up java
              uses: actions/setup-java@v2
              with:
                  distribution: 'zulu'
                  java-version: ${{ matrix.java }}
            - name: Set up Maven
              uses: stCarolas/setup-maven@v4.2
              with:
                  maven-version: 3.2.5
            - name: Check mvn
              run: mvn -version
            - name: Build
              run: mvn -s ./jqm-engine/src/main/resources/META-INF/settings.xml install -DskipTests
            - name: Test
              run: mvn -s ./jqm-engine/src/main/resources/META-INF/settings.xml test

    publish_docker_image:
        runs-on: ubuntu-latest
        needs:
            [
                jdk_tests,
            ]
        # trigger job on merge only
        if: github.event.pull_request.merged == true
        steps:
            - uses: actions/checkout@v2
            - name: Login to Docker Hub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}
            # Push only for linux
            - name: Build and push docker image
              uses: docker/build-push-action@v2
              with:
                  push: true
                  file: docker/linux/Dockerfile
                  tags: enioka/jqm:v2-nightly
    publish_snapshot:
        runs-on: ubuntu-latest
        needs:
            [
                jdk_tests,
            ]
        # trigger job on merge only
        if: github.event.pull_request.merged == true
        steps:
            - uses: actions/checkout@v2
            - name: Set up Maven Central Repository
              uses: actions/setup-java@v2
              with:
                  java-version: 11
                  distribution: "zulu"
                  server-id: sonatype-nexus-snapshots
                  server-username: OSSRH_USERNAME
                  server-password: OSSRH_PASSWORD
            - name: Publish package
              run: mvn deploy
              env:
                  OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
                  OSSRH_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
