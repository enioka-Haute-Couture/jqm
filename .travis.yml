os: linux
dist: bionic
language: java
# travis has retired container-based builds and is now fully VM-based, so no more sudo=false.

# Now using https://github.com/DanySK/Gravis-CI (Jabba script) to avoid unreliable jdk support from Tavis.

before_install:
    - curl "https://raw.githubusercontent.com/DanySK/Gravis-CI/master/.install-jdk-travis.sh" --output ~/.install-jdk-travis.sh
    - source ~/.install-jdk-travis.sh
    - if [[ "$DB" == "mysql" || "$DB" == "mariadb" ]]; then mysql -e "create database jqm; grant all privileges on jqm.* to jqm@'%' identified by 'jqm'; flush privileges;"; fi
    - if [[ "$DB" == "mysql" || "$DB" == "mariadb" ]]; then sudo mysql -e "use mysql; update user set authentication_string=PASSWORD('new_password') where User='root'; update user set plugin='mysql_native_password';FLUSH PRIVILEGES;"; fi
    - if [[ "$DB" == "mysql" || "$DB" == "mariadb" ]]; then sudo mysql_upgrade -u root -pnew_password; fi
    - if [[ "$DB" == "mysql" || "$DB" == "mariadb" ]]; then sudo service mysql restart; fi
    - if [[ "$DB" == "postgresql" ]]; then psql -c "create database jqm;" -U postgres; fi
    - if [[ "$DB" == "postgresql" ]]; then psql -c "create user jqm with password 'jqm'; grant all privileges on database jqm to jqm;" -U postgres; fi
    - if [[ "$DB" == "db2" || "$DB" == "oracle" ]]; then echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin; fi
    - if [[ "$DB" == "db2" ]]; then docker run --privileged=true --rm --name db2 --detach -p 50000:50000 -e "LICENSE=accept" -e "DB2INST1_PASSWORD=superpassword" -e "DBNAME=jqm" -e "ARCHIVE_LOGS=false" ibmcom/db2; while true; do docker logs db2 2>&1 | grep "Setup has completed" >/dev/null 2>&1; if [[ $? -eq 0 ]]; then break; fi; sleep 1; done; docker exec -it db2 /bin/bash -c 'useradd -G db2iadm1 jqm; echo "jqm:jqm" | chpasswd' ; docker exec --user db2inst1 -it db2 /bin/bash -c 'export DB2INSTANCE=db2inst1; printf "connect to jqm\n create schema jqm AUTHORIZATION jqm\n " | /opt/ibm/db2/V11.5/bin/db2 -v -' ; fi
    - if [[ "$DB" == "oracle" ]]; then mkdir -p $HOME/.m2 ; cp .travis.settings.xml $HOME/.m2/settings.xml; docker run --detach --rm -p 1521:1521 --name oracle -e "DB_SID=JQM" store/oracle/database-enterprise:12.2.0.1-slim; while true; do  docker ps | grep oracle | grep "(healthy)" 2>&1 >/dev/null; if [[ $? -eq 0 ]]; then break; fi; sleep 1; done; docker exec -it oracle /bin/bash -c ". /home/oracle/.bashrc ; printf 'alter session set \"_ORACLE_SCRIPT\"=true; \n CREATE USER JQM IDENTIFIED BY jqm DEFAULT TABLESPACE SYSAUX QUOTA UNLIMITED ON SYSAUX ACCOUNT UNLOCK;\n GRANT CONNECT, RESOURCE TO JQM;\n ALTER SYSTEM SET OPEN_CURSORS=9999 SCOPE=BOTH;\n ' | sqlplus / as sysdba" ; fi;
    - cd jqm-all
    - export MAVEN_OPTS="-Xmx512m -XX:MaxMetaspaceSize=256m"

env:
    global:
        # Selenium
        - secure: ZI6QQDf1rjLK+ZiYh8SPuVlvTJ3nq/JgbFJsFz4pqpEVr30UjcBpICdwauktgPa7dakIfaCbZzBB5SwAayg9CLQ5eOcoiEjUVOVlLvMiUesKIY6B50QE9E/r/MDJddDlLlVbwBnMdovYh9+Cwu7ny7tbS6ueU9D7pKX+FfCkEns=
        - secure: dbcqjCXTsiNqPW0sSqA1DfYgzRAD6MK+lkCmBocTl0InimKFlM211j4rDt80talVl7HGPkS910S/twV2VfTUexYy5oZcqVvzfRST6ShLwnBmVz2rm78r/W+te3KmGY8w+RucLSM+M0DCfN74JnY7EI0dLCd1IberLkzCecxXOxw=
        # Docker
        - secure: VQgWWdamSLRvw0kCGP7SPwzSS7wa2DQrimUueAnPh7rQbgSOgrcN/aJM50HJGELE4ZRMUF7UylH8U7x6l0tf99Is+HxgPyX5I+J/3rFj73Vxa4JH9XxsPq23BCw4pn+fvVgMwAryXFh0dNJSCCEtKEa6RwTA/OGjkZs1ubTFfNc=
        - secure: ENaR0RFk5WuzLYMu0lYUCS7IPxnttU2Nz1XWuCJ6SBGhQGm4S7eFitwJHhPaEHW92K0RtPe9FKKPxu8waI6/8NDNhhQrNn31/gpHXZfLhMtDeLtCiHRcipC8baah+Gs19PT8DN9pYUBCTKErtLciFaKKzfj4dw0KidYtO803RVg=
        # Oracle
        - secure: e7UrcA3NOA4mriLZK2BsVIY+6Qxspgpdb8cBAMSrPFjUPUd03oHOeFGHDs1E9DIAanLYtWAcI6bzwMDA0PkmBzDlvQ6Lm1ifw9/IMyaOS8U6i5jbzZE6bW9iFdmmb30o2gwwWPBDfsyNFB8cU3ZExG7kW6UMEwmeh/Ky8YcFjgs=
        - secure: acx6z+K5zMMGKZ/SuDjSjAjbf2Oks6xUeDukNdyncWH+0tgO7N5lQIM+7Gh81e7N2JIoWWVCwcpYO4GNbo2mgSxQp8MFzgcRQ3qCMNhmgmIV2DZD3VNzToVV8nemForLZuhBTcDGkLZh+2/EIJUBbULkicAuTZDsKlpf4PBowOU=

# addons:
#   sauce_connect: true

stages:
    - name: jdk_tests
    - name: db_tests
    - name: db_tests_private
      # pull requests do not have access to the secrets needed for these builds. (private Oracle and IBM repos)
      if: type != pull_request

jobs:
    include:
        ## Tests on all openjdk supported versions
        - stage: jdk_tests
          env:
              - DB=hsqldb
              - JDK=zulu@1.8

        - stage: jdk_tests
          env:
              - DB=hsqldb
              - JDK=zulu@1.9

        - stage: jdk_tests
          env:
              - DB=hsqldb
              - JDK=zulu@1.10

        - stage: jdk_tests
          env:
              - DB=hsqldb
              - JDK=openjdk@1.11

        - stage: jdk_tests
          env:
              - DB=hsqldb
              - JDK=openjdk@1.12

        ## Tests on different databases
        - stage: db_tests
          env:
              - DB=mariadb
              - DB_VERSION=10.1
              - JDK=openjdk@1.11
          addons:
              mariadb: "10.1"

        - stage: db_tests
          env:
              - DB=mariadb
              - DB_VERSION=10.3
              - JDK=openjdk@1.11
          addons:
              mariadb: "10.3"

        - stage: db_tests
          env:
              - DB=postgresql
              - DB_VERSION=9.6
              - JDK=openjdk@1.11
          addons:
              postgresql: "9.6"

        - stage: db_tests
          env:
              - DB=postgresql
              - DB_VERSION=10
              - JDK=openjdk@1.11
          addons:
              postgresql: "10"

        - stage: db_tests
          env:
              - DB=mysql
              - DB_VERSION=5.7
              - JDK=openjdk@1.11
          services:
              - mysql

        ## Tests on databases needing private key access
        - stage: db_tests_private
          env:
              - DB=db2
              - DB_VERSION=11.5
              - JDK=openjdk@1.11
          services:
              - docker

        - stage: db_tests_private
          env:
              - DB=oracle
              - DB_VERSION=12.2
              - JDK=openjdk@1.11
          services:
              - docker

branches:
    except:
        - controller
