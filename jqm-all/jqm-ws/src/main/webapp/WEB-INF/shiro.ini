[main]
cacheManager = com.enioka.jqm.webui.shiro.UserCacheManager
securityManager.cacheManager = $cacheManager

cm = org.apache.shiro.authc.credential.HashedCredentialsMatcher
cm.hashAlgorithmName = SHA-512
cm.hashIterations = 100000
cm.storedCredentialsHexEncoded = true

dbRealm = com.enioka.jqm.webui.shiro.JdbcRealm
dbRealm.credentialsMatcher = $cm
dbRealm.authenticationCachingEnabled = true 
securityManager.realms = $dbRealm

# Custom basic HTTP filter which does not trigger browser auth prompts inside interactive applications
authcBasicWs = com.enioka.jqm.webui.shiro.BasicHttpAuthenticationFilter
authcBasicWs.applicationName = JQM

[urls]
#######################
## Admin URL
#######################

# REST resources are protected according to the verb used
/ws/admin/node/** = authcBasicWs, rest[node]
/ws/admin/q/** = authcBasicWs, rest[queue]
/ws/admin/qmapping/** = authcBasicWs, rest[qmapping]
/ws/admin/jndi/** = authcBasicWs, rest[jndi]
/ws/admin/prm/** = authcBasicWs, rest[prm]
/ws/admin/jd/** = authcBasicWs, rest[jd]
/ws/admin/user/** = authcBasicWs, rest[user]
/ws/admin/role/** = authcBasicWs, rest[role]

# This address allows client to retrieve all their own permission, therefore it has to be in the logged-in only zone too but without checks
/ws/admin/me= authcBasicWs

# Static is not important
/app.js = anon
/common.js = anon
/css/* = anon
/constant/*.js = anon
/controller/*.js = anon
/fonts/* = anon
/index.html = anon
/out.html = anon
/libs/** = anon
/service/*.js = anon
/template/*.html = anon

#######################
## Client URL
#######################

/ws/client/ji/query = authcBasicWs, perms["job_instance:read"]
/ws/client/ji/files/** = authcBasicWs, perms["files:read"]
/ws/client/ji/*/std* = authcBasicWs, perms["logs:read"]
/ws/client/ji/*/position** = authcBasicWs, perms["queue_position:create"]
/ws/client/user/*/ji = authcBasicWs, perms[job_instance]
/ws/client/ji/** =  authcBasicWs, rest[job_instance]
/ws/client/q/*/* = authcBasicWs, perms[queue_position:create]
/ws/client/q/** = authcBasicWs, rest[queue]
/ws/client/jd/** = authcBasicWs, rest[jd]


#######################
## Simple URL
#######################

/ws/simple/ji = authcBasicWs, rest[job_instance]
/ws/simple/file = authcBasicWs, rest[job_instance]
/ws/simple/status = authcBasicWs, rest[job_instance]
/ws/simple/stdout = authcBasicWs, perms["logs:read"]
/ws/simple/stderr = authcBasicWs, perms["logs:read"]


#######################
## Misc URL
#######################

# root is equivalent to the index page
/ = anon

# Default is: protected
/** = authcBasicWs, perms["doesnotexistsoadminonly"]

