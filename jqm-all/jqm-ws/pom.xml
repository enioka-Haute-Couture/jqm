<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.enioka.jqm</groupId>
		<artifactId>jqm-all</artifactId>
		<version>2.1.0-SNAPSHOT</version>
	</parent>

	<artifactId>jqm-ws</artifactId>
	<name>${project.groupId}:${project.artifactId}</name>
	<packaging>war</packaging>
	<url>http://jqm.readthedocs.org</url>
	<description>JQM web API implementation and administration UI</description>

	<properties>
		<sonar.exclusions>src/main/webapp/libs/**</sonar.exclusions>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<webResources>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>true</filtering>
							<includes>
								<include>**/home.html</include>
							</includes>
						</resource>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>false</filtering>
							<excludes>
								<exclude>**/home.html</exclude>
							</excludes>
						</resource>
					</webResources>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- To ease testing under Tomcat in Eclipse, we actually put normally 
			provided libs in the runtime scope -->
		<profile>
			<id>EclipseM2E</id>
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.6</version>
						<configuration>
							<webResources combine.children="append">
								<resource>
									<directory>src/test/webapp</directory>
									<filtering>false</filtering>
									<includes>
										<include>**</include>
									</includes>
								</resource>
							</webResources>
						</configuration>
					</plugin>
				</plugins>
			</build>

			<dependencies>
				<dependency>
					<groupId>org.apache.shiro</groupId>
					<artifactId>shiro-web</artifactId>
					<version>${shiro.version}</version>
				</dependency>
				<dependency>
					<groupId>com.enioka.jqm</groupId>
					<artifactId>jqm-pki</artifactId>
					<version>${project.version}</version>
				</dependency>
				<dependency>
					<groupId>org.apache.httpcomponents</groupId>
					<artifactId>httpclient</artifactId>
					<version>${httpclient.version}</version>
				</dependency>
				<dependency>
					<groupId>com.enioka.jqm</groupId>
					<artifactId>jqm-model</artifactId>
					<version>${project.version}</version>
				</dependency>
				<dependency>
					<groupId>org.slf4j</groupId>
					<artifactId>jul-to-slf4j</artifactId>
					<version>${slf4j.version}</version>
				</dependency>
				<dependency>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
					<version>${slf4j.version}</version>
				</dependency>
				<dependency>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-simple</artifactId>
					<version>${slf4j.version}</version>
				</dependency>
				<dependency>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
					<version>${commons.logging.version}</version>
				</dependency>
				<dependency>
					<groupId>commons-io</groupId>
					<artifactId>commons-io</artifactId>
					<version>${commons.io.version}</version>
				</dependency>
				<dependency>
					<groupId>commons-lang</groupId>
					<artifactId>commons-lang</artifactId>
					<version>${commons.lang.version}</version>
				</dependency>
			</dependencies>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>

		<!-- Jersey 2.x JAX-RS implementation, running inside a servlet, with a 
			JSON mapper -->
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<version>${jersey-version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-moxy</artifactId>
			<version>${jersey-version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.eclipse.persistence</groupId>
					<artifactId>org.eclipse.persistence.moxy</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- We impose a newer version of Moxy to avoid nasty bug 411001 -->
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.moxy</artifactId>
			<version>2.5.2</version>
		</dependency>

		<!-- Security -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>com.enioka.jqm</groupId>
			<artifactId>jqm-pki</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- For the client API -->
		<!-- This includes HTTPCLIENT, which is used in tests in this project -->
		<dependency>
			<groupId>com.enioka.jqm</groupId>
			<artifactId>jqm-api-client-jdbc</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.enioka.jqm</groupId>
			<artifactId>jqm-admin</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>${httpclient.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.enioka.jqm</groupId>
			<artifactId>jqm-model</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Some log -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>${commons.logging.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Stupid java IO APIs solution -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons.io.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>${commons.lang.version}</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>
</project>
